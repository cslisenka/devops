---
- name: create groups
  group: name=nginx state=present
  with_items:
    - nginx
    - webapps
  become: true
  become_user: root

- name: create user "nginx"
  user: name=nginx groups=nginx,webapps home=/opt/nginx createhome=no
  become: true
  become_user: root

- name: create nginx folders
  file: path={{ item.path }} state=directory mode={{ item.mode }} owner=nginx group=nginx
  with_items:
    - { path: "/opt/nginx-{{ nginx_version }}",  mode: '750' }
    - { path: "/opt/nginx-{{ nginx_version }}/bin",  mode: '550' }
    - { path: "/opt/nginx-{{ nginx_version }}/ssl",  mode: '550' }
    - { path: "/opt/nginx-{{ nginx_version }}/conf",  mode: '550' }
    - { path: "/var/run/nginx",  mode: '750' }
  become: true
  become_user: root

- name: create symlink "{{ nginx_path }}" to current nginx
  file: src=/opt/nginx-{{ nginx_version }} dest={{ nginx_path }} state=link group=nginx owner=nginx mode=550
  become: true
  become_user: root

- name: copy tar.gz with sources
  copy: src=files/nginx-{{ nginx_version }}.tar.gz dest=/tmp force=no owner=nginx group=nginx
  become: true
  become_user: nginx

- name: extract tar.gz into /tmp
  unarchive: src=/tmp/nginx-{{ nginx_version }}.tar.gz dest=/tmp remote_src=yes
  become: true
  become_user: nginx

- name: install modules required for building nginx
  package: name={{ item }} state=present
  with_items:
    - gcc
    - make
    - libssl-dev
    - libxslt1-dev
    - libxml2-dev
    - zlib1g-dev
    - libpcre3-dev
    - libbz2-dev
  become: true
  become_user: root

- name: configure nginx build
  command: "./configure --prefix=/opt/nginx --error-log-path=/var/log/nginx/error.log --with-http_ssl_module"
  args:
    chdir: "/tmp/nginx-{{ nginx_version }}"
  become: true
  become_user: nginx

- name: make build nginx
  make:
    chdir: /tmp/nginx-{{ nginx_version }}
    target: build
  become: true
  become_user: nginx

- name: copy nginx binary
  copy: src=/tmp/nginx-{{ nginx_version }}/objs/nginx dest=/opt/nginx-{{ nginx_version }}/bin owner=nginx group=nginx mode=550 remote_src=yes
  become: true
  become_user: root

- name: add nginx to systemd
  template: src=templates/nginx.service.j2 dest=/etc/systemd/system/nginx.service
  become: true
  become_user: root

- name: enable nginx service
  systemd: name=nginx enabled=yes daemon_reload=yes
  become: true
  become_user: root

# TODO change permissions to strict